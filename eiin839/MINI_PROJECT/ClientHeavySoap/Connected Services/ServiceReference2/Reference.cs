//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientHeavySoap.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/ServeurRouting")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/ServeurRouting")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contractNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientHeavySoap.ServiceReference2.Position positionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contractName {
            get {
                return this.contractNameField;
            }
            set {
                if ((object.ReferenceEquals(this.contractNameField, value) != true)) {
                    this.contractNameField = value;
                    this.RaisePropertyChanged("contractName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientHeavySoap.ServiceReference2.Position position {
            get {
                return this.positionField;
            }
            set {
                if ((object.ReferenceEquals(this.positionField, value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Itinerary", Namespace="http://schemas.datacontract.org/2004/07/ServeurRouting")]
    [System.SerializableAttribute()]
    public partial class Itinerary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientHeavySoap.ServiceReference2.Station[] itineraryStationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientHeavySoap.ServiceReference2.Station[] itineraryStations {
            get {
                return this.itineraryStationsField;
            }
            set {
                if ((object.ReferenceEquals(this.itineraryStationsField, value) != true)) {
                    this.itineraryStationsField = value;
                    this.RaisePropertyChanged("itineraryStations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IRouting")]
    public interface IRouting {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/ComputeClosestStation", ReplyAction="http://tempuri.org/IRouting/ComputeClosestStationResponse")]
        ClientHeavySoap.ServiceReference2.Station ComputeClosestStation(ClientHeavySoap.ServiceReference2.Position position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/ComputeClosestStation", ReplyAction="http://tempuri.org/IRouting/ComputeClosestStationResponse")]
        System.Threading.Tasks.Task<ClientHeavySoap.ServiceReference2.Station> ComputeClosestStationAsync(ClientHeavySoap.ServiceReference2.Position position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/ComputeAvailibility", ReplyAction="http://tempuri.org/IRouting/ComputeAvailibilityResponse")]
        bool ComputeAvailibility(ClientHeavySoap.ServiceReference2.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/ComputeAvailibility", ReplyAction="http://tempuri.org/IRouting/ComputeAvailibilityResponse")]
        System.Threading.Tasks.Task<bool> ComputeAvailibilityAsync(ClientHeavySoap.ServiceReference2.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/StoreItinerary", ReplyAction="http://tempuri.org/IRouting/StoreItineraryResponse")]
        void StoreItinerary(ClientHeavySoap.ServiceReference2.Itinerary itinerary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/StoreItinerary", ReplyAction="http://tempuri.org/IRouting/StoreItineraryResponse")]
        System.Threading.Tasks.Task StoreItineraryAsync(ClientHeavySoap.ServiceReference2.Itinerary itinerary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/ComputeItinerary", ReplyAction="http://tempuri.org/IRouting/ComputeItineraryResponse")]
        ClientHeavySoap.ServiceReference2.Itinerary ComputeItinerary(ClientHeavySoap.ServiceReference2.Position position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/ComputeItinerary", ReplyAction="http://tempuri.org/IRouting/ComputeItineraryResponse")]
        System.Threading.Tasks.Task<ClientHeavySoap.ServiceReference2.Itinerary> ComputeItineraryAsync(ClientHeavySoap.ServiceReference2.Position position);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoutingChannel : ClientHeavySoap.ServiceReference2.IRouting, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutingClient : System.ServiceModel.ClientBase<ClientHeavySoap.ServiceReference2.IRouting>, ClientHeavySoap.ServiceReference2.IRouting {
        
        public RoutingClient() {
        }
        
        public RoutingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoutingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoutingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoutingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientHeavySoap.ServiceReference2.Station ComputeClosestStation(ClientHeavySoap.ServiceReference2.Position position) {
            return base.Channel.ComputeClosestStation(position);
        }
        
        public System.Threading.Tasks.Task<ClientHeavySoap.ServiceReference2.Station> ComputeClosestStationAsync(ClientHeavySoap.ServiceReference2.Position position) {
            return base.Channel.ComputeClosestStationAsync(position);
        }
        
        public bool ComputeAvailibility(ClientHeavySoap.ServiceReference2.Station station) {
            return base.Channel.ComputeAvailibility(station);
        }
        
        public System.Threading.Tasks.Task<bool> ComputeAvailibilityAsync(ClientHeavySoap.ServiceReference2.Station station) {
            return base.Channel.ComputeAvailibilityAsync(station);
        }
        
        public void StoreItinerary(ClientHeavySoap.ServiceReference2.Itinerary itinerary) {
            base.Channel.StoreItinerary(itinerary);
        }
        
        public System.Threading.Tasks.Task StoreItineraryAsync(ClientHeavySoap.ServiceReference2.Itinerary itinerary) {
            return base.Channel.StoreItineraryAsync(itinerary);
        }
        
        public ClientHeavySoap.ServiceReference2.Itinerary ComputeItinerary(ClientHeavySoap.ServiceReference2.Position position) {
            return base.Channel.ComputeItinerary(position);
        }
        
        public System.Threading.Tasks.Task<ClientHeavySoap.ServiceReference2.Itinerary> ComputeItineraryAsync(ClientHeavySoap.ServiceReference2.Position position) {
            return base.Channel.ComputeItineraryAsync(position);
        }
    }
}
